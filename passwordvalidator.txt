Password.PasswordMaker();
class Password
{
    private static string userPassword;

    public Password()
    {
        userPassword = string.Empty;
    }
    public Password(string password)
    {
        userPassword = password;
    }

    public string UserPassword
    {
        get => userPassword; set => userPassword = value;
    }

    public static void PasswordMaker()
    {
        while(true)
        {
            PasswordAsker();
            if (PasswordExceptions())
            {
                
            }
            else
            {
                Console.WriteLine("No ampersands or capital T's");
                continue;
            }
            if (PasswordLength())
            {
                
            }
            else
            {
                Console.WriteLine("Issue with length");
                continue;
            }
            if (PasswordUpper())
            {
                
            }
            else
            {
                Console.WriteLine("Issue with uppercase req");
                continue;
            }
            if (PasswordLower())
            {
                
            }
            else
            {
                Console.WriteLine("Issue with lowercase req");
                continue;
            }
            if (PasswordNumber())
            {
                break;
            }
            else
            {
                Console.WriteLine("Issue with number req");
                continue;
            }
        }
    }

    public static void PasswordAsker()
    {
        string message = "Enter a password: ";
        Console.WriteLine(message);
        userPassword = Console.ReadLine();
    }
    public static bool PasswordLength()
    {
        if(userPassword.Length >= 6 && userPassword.Length <= 13)
        {
            return true;
        }
        else
        {
            return false;
        }
    }

    public static bool PasswordUpper()
    {
        foreach(char chars in userPassword)
        {
            if(char.IsUpper(chars))
            {
                return true;
            }
        }
        return false;
    }

    public static bool PasswordLower()
    {
        foreach (char chars in userPassword)
        {
            if (char.IsLower(chars))
            {
                return true;
            }
        }
        return false;
    }

    public static bool PasswordNumber() 
    {
        foreach (char chars in userPassword)
        {
            if (char.IsNumber(chars))
            {
                return true;
            }
        }
        return false;
    }

    public static bool PasswordExceptions()
    {
        foreach (char chars in userPassword)
        {
            if (userPassword.Contains("&") || userPassword.Contains("T"))
            {
                return false;
            }
        }
        return true;
    }
}
